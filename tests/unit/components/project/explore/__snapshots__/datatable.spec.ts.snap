// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`components/project/explore/DataTable.vue it renders the different entity types author renders the correct headers 1`] = `
Array [
  Object {
    "text": "project.explore.table.headers.author.first_name",
    "value": "firstName",
  },
  Object {
    "text": "project.explore.table.headers.author.last_name",
    "value": "lastName",
  },
  Object {
    "text": "project.explore.table.headers.author.count_records",
    "value": "countRecords",
  },
]
`;

exports[`components/project/explore/DataTable.vue it renders the different entity types conference renders the correct headers 1`] = `Array []`;

exports[`components/project/explore/DataTable.vue it renders the different entity types country renders the correct headers 1`] = `Array []`;

exports[`components/project/explore/DataTable.vue it renders the different entity types institution renders the correct headers 1`] = `Array []`;

exports[`components/project/explore/DataTable.vue it renders the different entity types publication renders the correct headers 1`] = `Array []`;

exports[`components/project/explore/DataTable.vue it renders the different entity types publisher renders the correct headers 1`] = `Array []`;

exports[`components/project/explore/DataTable.vue it renders the different entity types record renders the correct headers 1`] = `
Array [
  Object {
    "text": "project.explore.table.headers.record.title",
    "value": "title",
  },
  Object {
    "text": "project.explore.table.headers.record.authors",
    "value": "renderedAuthors",
  },
  Object {
    "text": "project.explore.table.headers.record.year",
    "value": "year",
  },
  Object {
    "text": "project.explore.table.headers.record.number_citations",
    "value": "numberCitations",
  },
  Object {
    "text": "project.explore.table.headers.record.keywords",
    "value": "renderedKeywords",
  },
]
`;

exports[`components/project/explore/DataTable.vue renders 1`] = `
<v-card-stub loaderheight="4" tag="div" style="width: 100%;">
  <v-card-title-stub>
    <h1 class="display-1 my-5">
      project.explore.title.query_by_type.record
    </h1>
    <v-spacer-stub></v-spacer-stub>
    <v-text-field-stub errorcount="1" errormessages="" messages="" rules="" successmessages="" value="" appendicon="mdi-magnify" backgroundcolor="" hidedetails="true" label="project.explore.table.search" loaderheight="2" clearable="true" clearicon="$clear" singleline="true" type="text"></v-text-field-stub>
  </v-card-title-stub>
  <v-data-table-stub items="[object Object],[object Object]" options="[object Object]" sortby="" sortdesc="" customsort="function sortItems(items, sortBy, sortDesc, locale, customSorters) {
  if (sortBy === null || !sortBy.length) return items;
  var numericCollator = new Intl.Collator(locale, {
    numeric: true,
    usage: 'sort'
  });
  var stringCollator = new Intl.Collator(locale, {
    sensitivity: 'accent',
    usage: 'sort'
  });
  return items.sort(function (a, b) {
    var _a, _b;

    for (var i = 0; i < sortBy.length; i++) {
      var sortKey = sortBy[i];
      var sortA = getObjectValueByPath(a, sortKey);
      var sortB = getObjectValueByPath(b, sortKey);

      if (sortDesc[i]) {
        _a = __read([sortB, sortA], 2), sortA = _a[0], sortB = _a[1];
      }

      if (customSorters &amp;&amp; customSorters[sortKey]) {
        var customResult = customSorters[sortKey](sortA, sortB);
        if (!customResult) continue;
        return customResult;
      } // Check if both cannot be evaluated


      if (sortA === null &amp;&amp; sortB === null) {
        continue;
      }

      _b = __read([sortA, sortB].map(function (s) {
        return (s || '').toString().toLocaleLowerCase();
      }), 2), sortA = _b[0], sortB = _b[1];

      if (sortA !== sortB) {
        if (!isNaN(sortA) &amp;&amp; !isNaN(sortB)) return numericCollator.compare(sortA, sortB);
        return stringCollator.compare(sortA, sortB);
      }
    }

    return 0;
  });
}" page="1" itemsperpage="10" groupby="" groupdesc="" locale="en-US" disablefiltering="true" customfilter="function defaultFilter(value, search, item) {
  return value != null &amp;&amp; search != null &amp;&amp; typeof value !== 'boolean' &amp;&amp; value.toString().toLocaleLowerCase().indexOf(search.toLocaleLowerCase()) !== -1;
}" serveritemslength="12" itemkey="id" value="" expanded="" noresultstext="$vuetify.dataIterator.noResultsText" nodatatext="$vuetify.noDataText" loadingtext="$vuetify.dataIterator.loadingText" headers="[object Object],[object Object],[object Object],[object Object],[object Object]" mobilebreakpoint="600" expandicon="$expand" style="width: 100%;"></v-data-table-stub>
</v-card-stub>
`;
